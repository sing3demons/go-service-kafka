version: '3.9'
name: ms-service
services:
  mongodb1:
    image: mongo:6
    container_name: mongodb1
    command: ['--replSet', 'my-replica-set', '--bind_ip_all', '--port', '27017']
    volumes:
      - ./data/mongo-1:/data/db
    ports:
      - 27017:27017
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'my-replica-set',members:[{_id:0,host:\"mongodb1:27017\"},{_id:1,host:\"mongodb2:27018\"},{_id:2,host:\"mongodb3:27019\"}]}).ok || rs.status().ok" | mongo --port 27017 --quiet) -eq 1
      interval: 10s
      start_period: 30s
    networks:
      - ms-service
  mongodb2:
    image: mongo:6
    container_name: mongodb2
    command: ['--replSet', 'my-replica-set', '--bind_ip_all', '--port', '27018']
    volumes:
      - ./data/mongo-2:/data/db
    ports:
      - 27018:27018
    networks:
      - ms-service
  mongodb3:
    image: mongo:6
    container_name: mongodb3
    command: ['--replSet', 'my-replica-set', '--bind_ip_all', '--port', '27019']
    volumes:
      - ./data/mongo-3:/data/db
    ports:
      - 27019:27019
    networks:
      - ms-service
  broker:
    image: confluentinc/cp-kafka:7.4.0
    hostname: broker
    container_name: broker
    restart: always
    ports:
      - '9092:9092'
      - '9101:9101'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid"
      # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
    networks:
      - ms-service
networks:
  ms-service:
    name: ms-service
# docker exec -it mongodb1 mongosh --eval "rs.initiate({_id:'my-replica-set', members:[{_id:0, host:'mongodb1:27017'}, {_id:1, host:'mongodb2:27018'}, {_id:2, host:'mongodb3:27019'}]})"
